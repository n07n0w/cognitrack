name: Database Health Check

on:
  workflow_dispatch:  # Only manual triggering

jobs:
  check-database:
    runs-on: ubuntu-latest # Free GitHub runner
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Supabase client
      run: npm install -g @supabase/supabase-js
    
    - name: Health check database
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      run: |
        cat > health-check.js << 'EOF'
        const { createClient } = require('@supabase/supabase-js');

        const supabaseUrl = process.env.SUPABASE_URL;
        const supabaseAnonKey = process.env.SUPABASE_ANON_KEY;

        if (!supabaseUrl || !supabaseAnonKey) {
          console.error('❌ Missing SUPABASE_URL or SUPABASE_ANON_KEY');
          process.exit(1);
        }

        const supabase = createClient(supabaseUrl, supabaseAnonKey);

        async function healthCheck() {
          try {
            console.log('🔍 Starting database health check...');
            
            // Check if main tables exist and are accessible
            const tables = ['emotions', 'activities', 'mood_entries'];
            
            for (const table of tables) {
              try {
                const { data, error } = await supabase
                  .from(table)
                  .select('count')
                  .limit(1);
                
                if (error) {
                  console.error(`❌ Table ${table} check failed:`, error.message);
                  process.exit(1);
                } else {
                  console.log(`✅ Table ${table} is accessible`);
                }
              } catch (err) {
                console.error(`❌ Failed to check table ${table}:`, err.message);
                process.exit(1);
              }
            }
            
            // Check if reference data exists
            const { data: emotions, error: emotionsError } = await supabase
              .from('emotions')
              .select('count');
              
            const { data: activities, error: activitiesError } = await supabase
              .from('activities')
              .select('count');
            
            if (emotionsError || activitiesError) {
              console.error('❌ Failed to check reference data');
              process.exit(1);
            }
            
            if (!emotions || emotions.length === 0) {
              console.warn('⚠️ No emotions data found - consider running database setup');
            } else {
              console.log('✅ Emotions data present');
            }
            
            if (!activities || activities.length === 0) {
              console.warn('⚠️ No activities data found - consider running database setup');
            } else {
              console.log('✅ Activities data present');
            }
            
            console.log('🎉 Database health check passed!');
            
          } catch (error) {
            console.error('❌ Health check failed:', error);
            process.exit(1);
          }
        }

        healthCheck();
        EOF
        
        node health-check.js
    
    - name: Report success
      if: success()
      run: |
        echo "✅ Database is healthy and ready for the CogniTrack app!"
        echo "📊 All tables are accessible"
        echo "🔗 Connection to Supabase is working"
    
    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🚨 Database Health Check Failed',
            body: `
            ## Database Health Check Failed
            
            The automated database health check has failed. This may indicate:
            
            - 🔌 Connection issues with Supabase
            - 📊 Missing or corrupted database tables
            - 🔑 Authentication problems with Supabase credentials
            - 🗄️ Missing reference data (emotions/activities)
            
            ### Recommended Actions:
            
            1. Check Supabase project status and connectivity
            2. Verify that SUPABASE_URL and SUPABASE_ANON_KEY secrets are correctly set
            3. Run the manual database setup workflow if tables are missing
            4. Review the workflow logs for specific error details
            
            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            **Triggered by:** ${context.eventName}
            **Branch:** ${context.ref}
            **Commit:** ${context.sha}
            `
          }) 